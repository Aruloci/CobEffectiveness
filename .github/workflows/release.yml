name: Attach build artifacts to published release

on:
  release:
    types: [published]  # runs right after you click "Publish release"

permissions:
  contents: write  # needed to upload assets to the release

jobs:
  build-and-attach:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Java 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "21"
          cache: gradle

      - name: Make Gradle wrapper executable
        run: chmod +x ./gradlew

      - name: Build (Fabric + NeoForge)
        run: |
          ./gradlew --no-daemon --stacktrace \
            :common:build \
            :fabric:remapJar \
            :neoforge:remapJar

      # Grab the final remapped jars (tweak the globs if your filenames differ)
      - name: Locate artifacts
        id: artifacts
        shell: bash
        run: |
          set -euo pipefail
          FAB_JAR=$(ls fabric/build/libs/*fabric-*.jar | head -n1 || true)
          NF_JAR=$(ls neoforge/build/libs/*neoforge-*.jar | head -n1 || true)

          if [[ -z "${FAB_JAR}" ]]; then
            echo "❌ Fabric jar not found in fabric/build/libs"; exit 1
          fi
          if [[ -z "${NF_JAR}" ]]; then
            echo "❌ NeoForge jar not found in neoforge/build/libs"; exit 1
          fi

          echo "fabric_path=${FAB_JAR}" >> "$GITHUB_OUTPUT"
          echo "neoforge_path=${NF_JAR}" >> "$GITHUB_OUTPUT"
          echo "✅ Fabric => ${FAB_JAR}"
          echo "✅ NeoForge => ${NF_JAR}"

      - name: Upload assets to this release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.event.release.tag_name }}
          files: |
            ${{ steps.artifacts.outputs.fabric_path }}
            ${{ steps.artifacts.outputs.neoforge_path }}
          fail_on_unmatched_files: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
